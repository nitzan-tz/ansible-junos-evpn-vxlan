/* This block of configuration has been generated by the role overlay-evpn-access for Ansible */

{% if access is defined %}

{% if access.nbr_ae is defined %}
chassis {
    aggregated-devices {
        ethernet {
            device-count {{ access.nbr_ae }};
        }
    }
}
{% endif %}

interfaces {
{% for interface in access.interfaces %}
    {{ interface.name }} {
{% if interface.description is defined %}
        description "{{ interface.description }}";
{% endif %}
{% if interface.mtu is defined and interface.mode != 'aggregate' %}
        mtu {{ interface.mtu }};
{% endif %}
{% if interface.esi is defined %}
        esi {
            {{ interface.esi }};
            all-active;
        }
{% endif %}
{% if interface.esi is not defined and interface.esi_neighbor is defined %}
        esi {		
{% set switches_id = [ hostvars[interface.esi_neighbor].id, id ] %}
            00:01:02:03:04:05:06{% for switch_id in switches_id | sort %}{{ ':%02x' | format(switch_id) }}{% endfor %}{{ ':%02x' | format(interface.name.split('ae')[-1] | int ) }};
            all-active;
        }
{% endif %}
{% if interface.mode == 'aggregate' %}
        hold-time up 60000 down 0;
        ether-options {
            802.3ad {{ interface.parent }};
        }
{% elif interface.server_role is defined and interface.mode == 'role' %}
        unit 0 {
            family ethernet-switching {
                interface-mode {{ role[interface.server_role].mode }};
                vlan {
                    members [{% for vlan in  role[interface.server_role].vlans %} {{ vlan }}{% endfor %}];
                }
            }
        }	
{% elif interface.mode == 'trunk' %}
        unit 0 {
            family ethernet-switching {
                interface-mode {{ interface.mode }};
                vlan {
                    members [{% for vlan in  interface.vlans %} {{ vlan }}{% endfor %}];
                }
            }
        }
{% elif interface.mode == 'access' %}
        unit 0 {
            family ethernet-switching {
                interface-mode {{ interface.mode }};
                vlan {
                    members [{% for vlan in  interface.vlans %} {{ vlan }}{% endfor %}];
                }
            }
        }
{% elif interface.mode == 'normalize' %}
{% for vni_id, vlan_id in  interface.vni_vlans_mapping.iteritems() %}
        flexible-vlan-tagging;
        unit {{ vlan_id }} {
            vlan-id {{ vlan_id }};
        }
{% endfor %}
{% endif %}
{% if interface.lacp_mode is defined and interface.lacp_system_id is defined %}
        aggregated-ether-options {
            lacp {
                {{ interface.lacp_mode }};
                periodic fast;
                system-id {{ interface.lacp_system_id }};
            }
        }
{% endif %}
{% if interface.lacp_mode is  defined and interface.lacp_system_id is not defined and interface.esi_neighbor is defined %}
        aggregated-ether-options {
            lacp {
                {{ interface.lacp_mode }};
                periodic fast;
{% set switches_id = [ hostvars[interface.esi_neighbor].id, id ] %}
                system-id 01:02:03{% for switch_id in switches_id | sort %}{{ ':%02x' | format(switch_id)   }}{% endfor %}{{ ':%02x' | format(interface.name.split('ae')[-1] | int ) }};
            }
        }
{% endif %}
    }
{% endfor %}
}

{% for interface in access.interfaces %}
{% if interface.mode == 'normalize' %}
{% for vni_id, vlan_id in  interface.vni_vlans_mapping.iteritems() %}
vlans {
    bd{{ vni_id }} {
        interface {{ interface.name }}.{{ vlan_id }}
    }
}
{% endfor %}
{% endif %}
{% endfor %}

{% endif %}
